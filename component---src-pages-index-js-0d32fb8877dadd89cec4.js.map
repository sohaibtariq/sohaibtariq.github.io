{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_components_bio__WEBPACK_IMPORTED_MODULE_3__","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_1__","boxShadow","to","date","tags","className","tag","class","kebabCase","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","m","module","exports","require","default","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","Layout","header","_this$props","children","pathname","fontSize","marginTop","whiteSpace","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Bio","_public_static_d_1492263432_json__WEBPACK_IMPORTED_MODULE_1__","_data$site$siteMetada","social","react__WEBPACK_IMPORTED_MODULE_2___default","display","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_4__","href","linkedIn"],"mappings":"uNASMA,kLACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUb,KAAKC,MAAMY,SAAUR,MAAOH,GAC5CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKT,MAAM,cACXI,EAAAC,EAAAC,cAACI,EAAA,EAAD,MACCT,EAAMU,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNb,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOC,KACpD,OACEZ,EAAAC,EAAAC,cAAA,OAAKW,IAAKJ,EAAKE,OAAOC,MACpBZ,EAAAC,EAAAC,cAAA,MACEY,MAAO,CACLC,aAAcC,YAAO,OAGvBhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMH,MAAO,CAAEI,UAAS,QAAYC,GAAIV,EAAKE,OAAOC,MACjDhB,IAGLI,EAAAC,EAAAC,cAAA,aAAQO,EAAKC,YAAYU,MACxBX,EAAKC,YAAYW,KAChBrB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,kBACbtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,QACXb,EAAKC,YAAYW,KAAKd,IAAI,SAAAgB,GAAG,OAC5BvB,EAAAC,EAAAC,cAAA,MAAIsB,MAAQ,MAAMX,IAAKU,EAAG,OACxBvB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAME,GAAE,SAAWM,oBAAUF,GAArB,KAA+BA,QAK7C,KACJvB,EAAAC,EAAAC,cAAA,KACEwB,wBAAyB,CACvBC,OAAQlB,EAAKC,YAAYkB,aAAenB,EAAKoB,mBArCvCC,IAAMC,WAgDf3C,YAER,IAAM4C,EAAS,+CC3DtB,IAAAC,EAAAC,EAAA,GAAAlC,EAAAkC,EAAAC,EAAAF,GAAAG,EAAAF,EAAA,IAAAG,EAAAH,EAAAC,EAAAC,GAAAF,EAAAI,EAAAC,EAAA,sBAAAF,EAAApC,IAAAiC,EAAA,KAAAA,EAAA,GAcyBM,QAAOC,QAELX,IAAMY,cAAc,yBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CT,EAAAI,EAAAC,EAAA,sBAAAvB,IAAAkB,EAAAI,EAAAC,EAAA,sBAAAS,IAAA,IAAAC,EAAAf,EAAA,KAAAgB,EAAAhB,EAAAC,EAAAc,GAAAE,EAAAjB,EAAA,KAAAkB,EAAAlB,EAAAC,EAAAgB,GAGAE,IAAcC,oBAAsB,WAClC,MAAO,CACLC,2BAA4B,CAC1BrC,UAAS,iBAKRmC,IAAcG,YAErB,IAAMC,EAAa,IAAIC,IAAWL,KAOnBI,IACFzC,EAASyC,EAAWzC,OACpBgC,EAAQS,EAAWT,yFChB1BW,kLACJtE,OAAA,WAAS,IAGHuE,EAHGC,EAC+BtE,KAAKC,MAAnCY,EADDyD,EACCzD,SAAUR,EADXiE,EACWjE,MAAOkE,EADlBD,EACkBC,SA+CzB,OA1CEF,EAJY,MAGVxD,EAAS2D,SAET/D,EAAAC,EAAAC,cAAA,MACEY,MAAO,CACLkD,SAAQ,MACRjD,aAAcC,YAAO,KACrBiD,UAAW,EACpBC,WAAU,SAGHlE,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEH,MAAO,CACLI,UAAS,OACTiD,eAAc,OACdC,MAAK,WAEPjD,GAAE,KAEDvB,IAMLI,EAAAC,EAAAC,cAAA,MACEY,MAAO,CACLuD,WAAU,yBACVJ,UAAW,IAGbjE,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEH,MAAO,CACLI,UAAS,OACTiD,eAAc,OACdC,MAAK,WAEPjD,GAAE,KAEDvB,IAMPI,EAAAC,EAAAC,cAAA,OACEY,MAAO,CACLwD,WAAU,OACVC,YAAW,OACXC,SAAUxD,YAAO,IACjByD,QAAYzD,YAAO,KAAZ,IAAoBA,YAAO,OAGpChB,EAAAC,EAAAC,cAAA,cAAS0D,GACT5D,EAAAC,EAAAC,cAAA,YAAO4D,GACP9D,EAAAC,EAAAC,cAAA,oBACK,IAAIwE,MAAOC,cADhB,6CA5Da7C,IAAMC,WAuEZ4B,iFCvDAiB,UAjBU,SAAApE,GAAiC,IAA9BJ,EAA8BI,EAA9BJ,SAAUyE,EAAoBrE,EAApBqE,cACpC,OAAKA,EAGE/C,IAAM5B,cAAc4E,IAApBC,OAAAC,OAAA,CACL5E,WACAyE,iBACGA,EAAcI,OALV,uFCKX,SAASC,EAAT1E,GAAiD,IAAlCoB,EAAkCpB,EAAlCoB,YAAauD,EAAqB3E,EAArB2E,KAAMC,EAAe5E,EAAf4E,KAAMxF,EAASY,EAATZ,MAC9BF,EADuC2F,EAAA/F,KACvCI,KAcF4F,EAAkB1D,GAAelC,EAAKC,aAAaiC,YAEzD,OACE2D,EAAAtF,EAAAC,cAACsF,EAAAvF,EAAD,CACEwF,eAAgB,CACdN,QAEFvF,MAAOA,EACP8F,cAAa,QAAUhG,EAAKC,aAAaC,MACzCwF,KAAM,CACJ,CACEO,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAShG,GAEX,CACEiG,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASlG,EAAKC,aAAamG,QAE7B,CACEH,KAAI,gBACJC,QAAShG,GAEX,CACE+F,KAAI,sBACJC,QAASN,IAEXS,OAAOX,KAKfF,EAAIc,aAAe,CACjBb,KAAI,KACJC,KAAM,GACNxD,YAAW,IAUEsD,sRCnBAe,IAtDH,WACV,IAAM3G,EAAI4G,EAAA5G,KADM6G,EAqBW7G,EAAKI,KAAKC,aAA7BmG,EArBQK,EAqBRL,OAAQM,EArBAD,EAqBAC,OAChB,OACEC,EAAApG,EAAAC,cAAA,OACEY,MAAO,CACLwF,QAAO,OACPvF,aAAcC,YAAO,OAGvBqF,EAAApG,EAAAC,cAACqG,EAAAtG,EAAD,CACEuG,MAAOlH,EAAKmH,OAAOC,gBAAgBF,MACnCG,IAAKb,EACLhF,MAAO,CACLyD,YAAavD,YAAO,IACpBD,aAAc,EACd6F,SAAU,GACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,SAGhBR,EAAApG,EAAAC,cAAA,SAAGmG,EAAApG,EAAAC,cAAA,cAAS4F,GAAZ,iJAGGO,EAAApG,EAAAC,cAAC6G,EAAA,aAAD,CAAcC,KAAI,+BAAiCZ,EAAOa,UAA1D,YAHH,8BAM4BZ,EAAApG,EAAAC,cAAA","file":"component---src-pages-index-js-0d32fb8877dadd89cec4.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { kebabCase } from 'lodash'\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const posts = data.allMarkdownRemark.edges\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"All posts\" />\r\n        <Bio />\r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          return (\r\n            <div key={node.fields.slug}>\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n              {node.frontmatter.tags ? (\r\n                <div className=\"tags-container\">\r\n                  <ul className=\"tags\">\r\n                    {node.frontmatter.tags.map(tag => (\r\n                      <li class = \"tag\" key={tag + `tag`}>\r\n                        <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ) : null}\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        })}\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\"\r\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\r\n\r\nWordpress2016.overrideThemeStyles = () => {\r\n  return {\r\n    \"a.gatsby-resp-image-link\": {\r\n      boxShadow: `none`,\r\n    },\r\n  }\r\n}\r\n\r\ndelete Wordpress2016.googleFonts\r\n\r\nconst typography = new Typography(Wordpress2016)\r\n\r\n// Hot reload typography in development.\r\nif (process.env.NODE_ENV !== `production`) {\r\n  typography.injectStyles()\r\n}\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { rhythm, scale } from \"../utils/typography\"\r\nimport \"./layout.css\"\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { location, title, children } = this.props\r\n    const rootPath = `${__PATH_PREFIX__}/`\r\n    let header\r\n\r\n    if (location.pathname === rootPath) {\r\n      header = (\r\n        <h1\r\n          style={{\r\n            fontSize: `6vw`,\r\n            marginBottom: rhythm(1.5),\r\n            marginTop: 0,\r\n\t\t\twhiteSpace: `wrap`,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: `none`,\r\n              textDecoration: `none`,\r\n              color: `inherit`,\r\n            }}\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h1>\r\n      )\r\n    } else {\r\n      header = (\r\n        <h3\r\n          style={{\r\n            fontFamily: `Montserrat, sans-serif`,\r\n            marginTop: 0,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: `none`,\r\n              textDecoration: `none`,\r\n              color: `inherit`,\r\n            }}\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h3>\r\n      )\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          marginLeft: `auto`,\r\n          marginRight: `auto`,\r\n          maxWidth: rhythm(24),\r\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\r\n        }}\r\n      >\r\n        <header>{header}</header>\r\n        <main>{children}</main>\r\n        <footer>\r\n          © {new Date().getFullYear()}, Sohaib Tariq. All rights reserved.\r\n         \r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n /*  {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a> \r\n\t\t  ...scale(1.5),*/\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\r\n        childImageSharp {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author\r\n          social {\r\n            linkedIn\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { author, social } = data.site.siteMetadata\r\n  return (\r\n    <div\r\n      style={{\r\n        display: `flex`,\r\n        marginBottom: rhythm(2.5),\r\n      }}\r\n    >\r\n      <Image\r\n        fixed={data.avatar.childImageSharp.fixed}\r\n        alt={author}\r\n        style={{\r\n          marginRight: rhythm(1 / 2),\r\n          marginBottom: 0,\r\n          minWidth: 50,\r\n          borderRadius: `100%`,\r\n        }}\r\n        imgStyle={{\r\n          borderRadius: `50%`,\r\n        }}\r\n      />\r\n      <p><strong>{author}</strong> is a fullstack developer and serial procrastinator.\r\n        This is a blog about his wanderings in technology and life.\r\n\t\tYou should check him out on &nbsp;  \r\n         <OutboundLink href={`https://www.linkedin.com/in/${social.linkedIn}`}>\r\n          linkedIn\r\n        </OutboundLink>\r\n\t\t&nbsp; or shoot him an email at <i>sohaibtariq12@gmail.com</i>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n"],"sourceRoot":""}