{"version":3,"sources":["webpack:///./src/templates/tagsList.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js"],"names":["TagsList","_ref","tags","otherProps","_objectWithoutPropertiesLoose","length","react","Object","assign","class","map","tag","key","gatsby_browser_entry","to","kebabCase","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react_default","a","createElement","layout","location","seo","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","date","dangerouslySetInnerHTML","__html","html","bio","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","m","module","exports","require","default","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","Layout","header","_this$props","children","pathname","fontSize","whiteSpace","gatsby__WEBPACK_IMPORTED_MODULE_1__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","Date","getFullYear","ProdPageRenderer","pageResources","InternalPageRenderer","json","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Bio","_public_static_d_1492263432_json__WEBPACK_IMPORTED_MODULE_1__","_data$site$siteMetada","social","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_4__","href","linkedIn"],"mappings":"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","file":"component---src-templates-blog-post-js-20a09a21303493223971.js","sourcesContent":["import * as React from 'react'\r\nimport { Link } from \"gatsby\"\r\nimport {kebabCase} from \"lodash\"\r\nimport '../components/layout.css'\r\n\r\n\r\n\r\nexport function TagsList({tags, ...otherProps}) {\r\n  if (!tags || tags.length === 0) {\r\n    return null\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <ul class = \"tags\" {...otherProps}>\r\n      {tags.map(tag => (\r\n        <li key={tag} class = \"tag\">\r\n          <Link  to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\nimport { TagsList } from \"./tagsList\";\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n    const { previous, next } = this.props.pageContext\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO\r\n          title={post.frontmatter.title}\r\n          description={post.frontmatter.description || post.excerpt}\r\n        />\r\n        <h1\r\n          style={{\r\n            marginTop: rhythm(1),\r\n            marginBottom: 0,\r\n          }}\r\n        >\r\n          {post.frontmatter.title}\r\n        </h1>\r\n       \r\n        <p\r\n          style={{\r\n            ...scale(-1 / 5),\r\n            display: `block`,\r\n            marginBottom: rhythm(1),\r\n          }}\r\n        >\r\n          {post.frontmatter.date}\r\n        </p>\r\n        <TagsList tags={post.frontmatter.tags} />\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        <hr\r\n          style={{\r\n            marginBottom: rhythm(1),\r\n          }}\r\n        />\r\n        <Bio />\r\n\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n\t    \ttags\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\"\r\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\r\n\r\nWordpress2016.overrideThemeStyles = () => {\r\n  return {\r\n    \"a.gatsby-resp-image-link\": {\r\n      boxShadow: `none`,\r\n    },\r\n  }\r\n}\r\n\r\ndelete Wordpress2016.googleFonts\r\n\r\nconst typography = new Typography(Wordpress2016)\r\n\r\n// Hot reload typography in development.\r\nif (process.env.NODE_ENV !== `production`) {\r\n  typography.injectStyles()\r\n}\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { rhythm, scale } from \"../utils/typography\"\r\nimport \"./layout.css\"\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { location, title, children } = this.props\r\n    const rootPath = `${__PATH_PREFIX__}/`\r\n    let header\r\n\r\n    if (location.pathname === rootPath) {\r\n      header = (\r\n        <h1\r\n          style={{\r\n            fontSize: `6vw`,\r\n            marginBottom: rhythm(1.5),\r\n            marginTop: 0,\r\n\t\t\twhiteSpace: `wrap`,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: `none`,\r\n              textDecoration: `none`,\r\n              color: `inherit`,\r\n            }}\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h1>\r\n      )\r\n    } else {\r\n      header = (\r\n        <h3\r\n          style={{\r\n            fontFamily: `Montserrat, sans-serif`,\r\n            marginTop: 0,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: `none`,\r\n              textDecoration: `none`,\r\n              color: `inherit`,\r\n            }}\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h3>\r\n      )\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          marginLeft: `auto`,\r\n          marginRight: `auto`,\r\n          maxWidth: rhythm(24),\r\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\r\n        }}\r\n      >\r\n        <header>{header}</header>\r\n        <main>{children}</main>\r\n        <footer>\r\n          © {new Date().getFullYear()}, Sohaib Tariq. All rights reserved.\r\n         \r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n /*  {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a> \r\n\t\t  ...scale(1.5),*/\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\r\n        childImageSharp {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author\r\n          social {\r\n            linkedIn\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { author, social } = data.site.siteMetadata\r\n  return (\r\n    <div\r\n      style={{\r\n        display: `flex`,\r\n        marginBottom: rhythm(2.5),\r\n      }}\r\n    >\r\n      <Image\r\n        fixed={data.avatar.childImageSharp.fixed}\r\n        alt={author}\r\n        style={{\r\n          marginRight: rhythm(1 / 2),\r\n          marginBottom: 0,\r\n          minWidth: 50,\r\n          borderRadius: `100%`,\r\n        }}\r\n        imgStyle={{\r\n          borderRadius: `50%`,\r\n        }}\r\n      />\r\n      <p><strong>{author}</strong> is a fullstack developer and serial procrastinator.\r\n        This is a blog about his wanderings in technology and life.\r\n\t\tYou should check him out on &nbsp;  \r\n         <OutboundLink href={`https://www.linkedin.com/in/${social.linkedIn}`}>\r\n          linkedIn\r\n        </OutboundLink>\r\n\t\t&nbsp; or shoot him an email at <i>sohaibtariq12@gmail.com</i>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n"],"sourceRoot":""}